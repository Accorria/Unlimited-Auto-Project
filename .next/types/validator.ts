// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/about/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/about">> = Specific
  const handler = {} as typeof import("../../src/app/about/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/analytics/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/analytics">> = Specific
  const handler = {} as typeof import("../../src/app/admin/analytics/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/content/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/content">> = Specific
  const handler = {} as typeof import("../../src/app/admin/content/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/admin/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/dealers/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/dealers">> = Specific
  const handler = {} as typeof import("../../src/app/admin/dealers/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/inventory/[id]/edit/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/inventory/[id]/edit">> = Specific
  const handler = {} as typeof import("../../src/app/admin/inventory/[id]/edit/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/inventory/add/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/inventory/add">> = Specific
  const handler = {} as typeof import("../../src/app/admin/inventory/add/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/inventory/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/inventory">> = Specific
  const handler = {} as typeof import("../../src/app/admin/inventory/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/leads/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/leads">> = Specific
  const handler = {} as typeof import("../../src/app/admin/leads/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/login">> = Specific
  const handler = {} as typeof import("../../src/app/admin/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/settings">> = Specific
  const handler = {} as typeof import("../../src/app/admin/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/upload/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/upload">> = Specific
  const handler = {} as typeof import("../../src/app/admin/upload/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/users/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/users">> = Specific
  const handler = {} as typeof import("../../src/app/admin/users/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/contact/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contact">> = Specific
  const handler = {} as typeof import("../../src/app/contact/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/credit-application/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/credit-application">> = Specific
  const handler = {} as typeof import("../../src/app/credit-application/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/financing/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/financing">> = Specific
  const handler = {} as typeof import("../../src/app/financing/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/inventory/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/inventory/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/inventory/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/inventory/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/inventory">> = Specific
  const handler = {} as typeof import("../../src/app/inventory/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/professional-credit-application/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/professional-credit-application">> = Specific
  const handler = {} as typeof import("../../src/app/professional-credit-application/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/services/collision/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/services/collision">> = Specific
  const handler = {} as typeof import("../../src/app/services/collision/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/services/detailing/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/services/detailing">> = Specific
  const handler = {} as typeof import("../../src/app/services/detailing/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/services/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/services">> = Specific
  const handler = {} as typeof import("../../src/app/services/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/services/repair/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/services/repair">> = Specific
  const handler = {} as typeof import("../../src/app/services/repair/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/services/tinting/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/services/tinting">> = Specific
  const handler = {} as typeof import("../../src/app/services/tinting/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/services/wrapping/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/services/wrapping">> = Specific
  const handler = {} as typeof import("../../src/app/services/wrapping/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/analytics/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/analytics">> = Specific
  const handler = {} as typeof import("../../src/app/api/analytics/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/applications/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/applications">> = Specific
  const handler = {} as typeof import("../../src/app/api/applications/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/direct-test/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/direct-test">> = Specific
  const handler = {} as typeof import("../../src/app/api/direct-test/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/financing/apply/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/financing/apply">> = Specific
  const handler = {} as typeof import("../../src/app/api/financing/apply/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/leads/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/leads/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/leads/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/leads/bulk-delete/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/leads/bulk-delete">> = Specific
  const handler = {} as typeof import("../../src/app/api/leads/bulk-delete/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/leads/clear/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/leads/clear">> = Specific
  const handler = {} as typeof import("../../src/app/api/leads/clear/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/leads/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/leads">> = Specific
  const handler = {} as typeof import("../../src/app/api/leads/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/simple-test/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/simple-test">> = Specific
  const handler = {} as typeof import("../../src/app/api/simple-test/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/test-dealer/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test-dealer">> = Specific
  const handler = {} as typeof import("../../src/app/api/test-dealer/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/upload/document/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/upload/document">> = Specific
  const handler = {} as typeof import("../../src/app/api/upload/document/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/upload/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/upload">> = Specific
  const handler = {} as typeof import("../../src/app/api/upload/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/vehicles/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/vehicles/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/vehicles/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/vehicles/refresh-cache/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/vehicles/refresh-cache">> = Specific
  const handler = {} as typeof import("../../src/app/api/vehicles/refresh-cache/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/vehicles/reorder/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/vehicles/reorder">> = Specific
  const handler = {} as typeof import("../../src/app/api/vehicles/reorder/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/vehicles/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/vehicles">> = Specific
  const handler = {} as typeof import("../../src/app/api/vehicles/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
